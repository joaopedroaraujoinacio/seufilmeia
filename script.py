import streamlit as st
import google.generativeai as genai

api_key = st.secrets['API_KEY']
genai.configure(api_key=api_key) 

model = genai.GenerativeModel("gemini-2.0-flash")

def sugerir_filme_gemini(prompt):
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        return f"Erro ao gerar sugest√£o de filme: {str(e)}"

def reset_filmes_sugeridos():
    if 'filmes_sugeridos_raw' in st.session_state:
        del st.session_state['filmes_sugeridos_raw']

st.set_page_config(page_title="Seu Filme.IA", layout="centered")

st.title("Seu Filme.IA")
st.markdown("Deixe a intelig√™ncia artificial te ajudar a encontrar **filmes incr√≠veis** com base nas suas prefer√™ncias!")

st.header("Suas Prefer√™ncias Principais")
st.markdown("Selecione os crit√©rios b√°sicos para o filme ideal.")

faixa_etaria = st.selectbox(
    "Para qual faixa et√°ria √© o filme?",
    ("Livre", "10+", "12+", "14+", "16+", "18+")
)

duracao = st.select_slider(
    "Qual a dura√ß√£o aproximada que voc√™ prefere?",
    options=["Curta (at√© 90 min)", "M√©dia (90-120 min)", "Longa (acima de 120 min)"]
)

nota_preferencia = st.slider(
    "Qual a nota m√≠nima que o filme deve ter (de 1 a 5)?",
    min_value=1.0,
    max_value=5.0,
    value=3.5,
    step=0.5
)

genero = st.multiselect(
    "Quais g√™neros voc√™ gostaria?",
    ["A√ß√£o", "Aventura", "Com√©dia", "Drama", "Fic√ß√£o Cient√≠fica", "Terror", "Romance", "Anima√ß√£o", "Document√°rio", "Fantasia", "Suspense", "Musical"],
    default=["Drama", "Fic√ß√£o Cient√≠fica"] 
)

st.header("Prefer√™ncias Adicionais (Opcional)")
st.markdown("Quer refinar ainda mais? Adicione detalhes de ano e atores.")

ano_lancamento = st.text_input("A partir de qual ano de lan√ßamento?", placeholder="Ex: 2000")

atores_atrizes = st.text_input("Atores ou Atrizes que voc√™ gostaria?", placeholder="Ex: Tom Hanks, Meryl Streep")

num_filmes = st.number_input(
    "Quantos filmes voc√™ gostaria de sugest√£o? (De 1 a 20)",
    min_value=1,
    max_value=20,
    value=5,
    step=1,
    help="Escolha o n√∫mero de filmes que a IA deve sugerir."
)

if st.button("Sugerir Filmes", type="primary"):
    if not genero:
        st.warning("Por favor, selecione pelo menos um g√™nero para a sugest√£o.")
    else:
        generos_str = ", ".join(genero)

        prompt = (
            f"Sugira {num_filmes} filmes com as seguintes caracter√≠sticas, apresentando as informa√ß√µes de forma concisa e objetiva:\n"
            f"- Faixa Et√°ria: {faixa_etaria}\n"
            f"- Dura√ß√£o: {duracao}\n"
            f"- Nota M√≠nima Esperada: {nota_preferencia} de 5\n"
            f"- G√™neros: {generos_str}\n"
        )
        
        if ano_lancamento:
            prompt += f"- Ano de Lan√ßamento a partir de: {ano_lancamento}\n"
        if atores_atrizes:
            prompt += f"- Atores/Atrizes sugeridos: {atores_atrizes}\n"
        
        prompt += (
            f"\nPara cada filme, apresente as seguintes informa√ß√µes:\n"
            f"T√≠tulo: [T√≠tulo do Filme]\n"
            f"Sinopse: [Breve Sinopse - m√°ximo de duas linhas]\n"
            f"Dura√ß√£o: [Dura√ß√£o aproximada]\n"
            f"Faixa Et√°ria: [Faixa Et√°ria]\n"
            f"G√™neros: [G√™neros]\n"
            f"Nota de Cr√≠tica: [Nota de 1 a 5, com uma fonte fict√≠cia, ex: '4.2/5 (Cr√≠ticos IMDb)']\n"
            f"---\n"
        )

        with st.spinner("Procurando os filmes perfeitos para voc√™..."):
            filmes_sugeridos_raw = sugerir_filme_gemini(prompt)
            st.session_state['filmes_sugeridos_raw'] = filmes_sugeridos_raw

if 'filmes_sugeridos_raw' in st.session_state:
    st.subheader("Suas Sugest√µes de Filmes:")
    
    filmes_list = st.session_state['filmes_sugeridos_raw'].strip().split('---\n')
    
    for i, filme_text in enumerate(filmes_list):
        if filme_text.strip():
            st.markdown(f"### üé¨ Filme {i+1}")
            
            lines = filme_text.strip().split('\n')
            for line in lines:
                if line.strip():
                    if "T√≠tulo:" in line:
                        clean_title = line.replace('T√≠tulo:', '').replace('**', '').strip()
                        st.markdown(f"**{clean_title}**")
                    elif "Sinopse:" in line:
                        clean_synopsis = line.replace('Sinopse:', '').replace('**', '').strip()
                        st.markdown(f"*{clean_synopsis}*")
                    else:
                        clean_line = line.replace('**', '').strip()
                        st.write(clean_line)
            st.markdown("---")

    st.button("Gerar Novamente Outros Filmes", on_click=reset_filmes_sugeridos)